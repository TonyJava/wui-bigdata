{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///boilerplate.min.js","webpack:///webpack/bootstrap bffaabc7ddda99d8bbdc","webpack:///./src/index.js","webpack:///./src/BarChart.jsx","webpack:///external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"React\",\"root\":\"React\"}","webpack:///./~/d3/d3.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_BarChart","_BarChart2","BarChart","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_extends","assign","target","i","arguments","length","source","key","hasOwnProperty","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_react","_react2","_d","_d2","_Component","_this","getPrototypeOf","state","data","setState","sort","ascending","push","Math","floor","random","forceUpdate","width","height","padding","left","right","top","bottom","rectStep","rectWidth","rectData","map","item","index","fill","x","y","textData","fontSize","textAnchor","dx","dy","createElement","onClick","sortItems","bind","addItem","Component","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","d3_numeric","isNaN","d3_bisector","compare","lo","hi","mid","d3_zipLength","d","d3_range_integerScale","k","d3_class","ctor","properties","d3_Map","_","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","method","apply","d3_vendorSymbol","object","name","charAt","toUpperCase","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","get","indexOf","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","createElementNS","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","append","position","margin","border","ctm","getScreenCTM","f","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","color","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","Date","now","time","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","join","specifier","d3_format_re","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","tops","bottoms","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","undefined"],"mappings":"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","file":"boilerplate.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"React\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Boilerplate\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"Boilerplate\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"React\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Boilerplate\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"Boilerplate\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _BarChart = __webpack_require__(1);\n\t\n\tvar _BarChart2 = _interopRequireDefault(_BarChart);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// this should be the entry point to your library\n\tmodule.exports = {\n\t  BarChart: _BarChart2.default\n\t};\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _d = __webpack_require__(3);\n\t\n\tvar _d2 = _interopRequireDefault(_d);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar BarChart = function (_Component) {\n\t  _inherits(BarChart, _Component);\n\t\n\t  function BarChart() {\n\t    _classCallCheck(this, BarChart);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(BarChart).call(this));\n\t\n\t    _this.state = {\n\t      data: [50, 43, 120, 87, 99, 167, 142]\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BarChart, [{\n\t    key: 'sortItems',\n\t    value: function sortItems() {\n\t      this.setState({\n\t        data: this.state.data.sort(_d2.default.ascending)\n\t      });\n\t    }\n\t  }, {\n\t    key: 'addItem',\n\t    value: function addItem() {\n\t      this.state.data.push(Math.floor(Math.random() * 100));\n\t      this.forceUpdate();\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var width = 400;\n\t      var height = 400;\n\t      var padding = {\n\t        left: 20,\n\t        right: 20,\n\t        top: 20,\n\t        bottom: 20\n\t      };\n\t      var rectStep = 35;\n\t      var rectWidth = 30;\n\t      var rectData = this.state.data.map(function (item, index) {\n\t        return {\n\t          fill: 'steelblue',\n\t          x: padding.left + index * rectStep,\n\t          y: height - padding.bottom - item,\n\t          width: rectWidth,\n\t          height: item\n\t        };\n\t      });\n\t      var textData = this.state.data.map(function (item, index) {\n\t        return {\n\t          fill: 'white',\n\t          fontSize: '14px',\n\t          textAnchor: 'middle',\n\t          x: padding.left + index * rectStep,\n\t          y: height - padding.bottom - item,\n\t          dx: rectWidth / 2,\n\t          dy: '1em',\n\t          value: item\n\t        };\n\t      });\n\t\n\t      return _react2.default.createElement(\n\t        'div',\n\t        null,\n\t        _react2.default.createElement(\n\t          'svg',\n\t          { height: height, width: width },\n\t          rectData.map(function (item, index) {\n\t            return _react2.default.createElement('rect', _extends({ key: index }, item));\n\t          }),\n\t          textData.map(function (item, index) {\n\t            return _react2.default.createElement(\n\t              'text',\n\t              _extends({ key: index }, item),\n\t              item.value\n\t            );\n\t          })\n\t        ),\n\t        _react2.default.createElement(\n\t          'button',\n\t          { onClick: this.sortItems.bind(this) },\n\t          'Sort'\n\t        ),\n\t        _react2.default.createElement(\n\t          'button',\n\t          { onClick: this.addItem.bind(this) },\n\t          'Add'\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BarChart;\n\t}(_react.Component);\n\t\n\texports.default = BarChart;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.12\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.zip = function() {\n\t    if (!(n = arguments.length)) return [];\n\t    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n\t        zip[j] = arguments[j][i];\n\t      }\n\t    }\n\t    return zips;\n\t  };\n\t  function d3_zipLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.transpose = function(matrix) {\n\t    return d3.zip.apply(d3, matrix);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: \"http://www.w3.org/1999/xhtml\",\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (node = group[i]) {\n\t            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n\t              exitNodes[i] = node;\n\t            } else {\n\t              nodeByKeyValue.set(keyValue, node);\n\t            }\n\t            keyValues[i] = keyValue;\n\t          }\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = d3_array(nodes);\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n\t    if (d2 < ε2) {\n\t      S = Math.log(w1 / w0) / ρ;\n\t      i = function(t) {\n\t        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n\t      };\n\t    } else {\n\t      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / ρ;\n\t      i = function(t) {\n\t        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      };\n\t    }\n\t    i.duration = S * 1e3;\n\t    return i;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: null\n\t      };\n\t      scaleTo(+_);\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function() {\n\t    d3_timer.apply(this, arguments);\n\t  };\n\t  function d3_timer(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t    return timer;\n\t  }\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now(), timer = d3_timer_queueHead;\n\t    while (timer) {\n\t      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n\t      timer = timer.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.c) {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      } else {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value = +value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n\t          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransformPop(s) {\n\t    return s.length ? s.pop() + \",\" : \"\";\n\t  }\n\t  function d3_interpolateTranslate(ta, tb, s, q) {\n\t    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n\t      var i = s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateRotate(ra, rb, s, q) {\n\t    if (ra !== rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateSkew(wa, wb, s, q) {\n\t    if (wa !== wb) {\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateScale(ka, kb, s, q) {\n\t    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n\t      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] !== 1 || kb[1] !== 1) {\n\t      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [];\n\t    a = d3.transform(a), b = d3.transform(b);\n\t    d3_interpolateTranslate(a.translate, b.translate, s, q);\n\t    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n\t    d3_interpolateSkew(a.skew, b.skew, s, q);\n\t    d3_interpolateScale(a.scale, b.scale, s, q);\n\t    a = b = null;\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: groupSums[di]\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        timer = null;\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) {\n\t          alpha = x;\n\t        } else {\n\t          timer.c = null, timer.t = NaN, timer = null;\n\t          event.end({\n\t            type: \"end\",\n\t            alpha: alpha = 0\n\t          });\n\t        }\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        timer = d3_timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = root.y = 0;\n\t      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    return domain;\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(1, base * n / scale.ticks().length);\n\t      return function(d) {\n\t        var i = d / pow(Math.round(log(d)));\n\t        if (i * base < base - .5) i *= base;\n\t        return i <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var rc1 = rc, rc0 = rc;\n\t        if (da < π) {\n\t          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t        if (x1 != null) {\n\t          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return points.join(\"L\") + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, activeId, active;\n\t      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        if (--lock.count) delete lock[activeId]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id], time, timer, duration, ease, tweens;\n\t    function schedule(elapsed) {\n\t      var delay = transition.delay;\n\t      timer.t = delay + time;\n\t      if (delay <= elapsed) return start(elapsed - delay);\n\t      timer.c = start;\n\t    }\n\t    function start(elapsed) {\n\t      var activeId = lock.active, active = lock[activeId];\n\t      if (active) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        --lock.count;\n\t        delete lock[activeId];\n\t        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t      }\n\t      for (var cancelId in lock) {\n\t        if (+cancelId < id) {\n\t          var cancel = lock[cancelId];\n\t          cancel.timer.c = null;\n\t          cancel.timer.t = NaN;\n\t          --lock.count;\n\t          delete lock[cancelId];\n\t        }\n\t      }\n\t      timer.c = tick;\n\t      d3_timer(function() {\n\t        if (timer.c && tick(elapsed || 1)) {\n\t          timer.c = null;\n\t          timer.t = NaN;\n\t        }\n\t        return 1;\n\t      }, 0, time);\n\t      lock.active = id;\n\t      transition.event && transition.event.start.call(node, node.__data__, i);\n\t      tweens = [];\n\t      transition.tween.forEach(function(key, value) {\n\t        if (value = value.call(node, node.__data__, i)) {\n\t          tweens.push(value);\n\t        }\n\t      });\n\t      ease = transition.ease;\n\t      duration = transition.duration;\n\t    }\n\t    function tick(elapsed) {\n\t      var t = elapsed / duration, e = ease(t), n = tweens.length;\n\t      while (n > 0) {\n\t        tweens[--n].call(node, e);\n\t      }\n\t      if (t >= 1) {\n\t        transition.event && transition.event.end.call(node, node.__data__, i);\n\t        if (--lock.count) delete lock[id]; else delete node[ns];\n\t        return 1;\n\t      }\n\t    }\n\t    if (!transition) {\n\t      time = inherit.time;\n\t      timer = d3_timer(schedule, 0, time);\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        timer: timer,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = d3_array(arguments);\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n\t}();\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** boilerplate.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap bffaabc7ddda99d8bbdc\n **/","'use strict';\n\nimport BarChart from './BarChart.jsx';\n\n// this should be the entry point to your library\nmodule.exports = {\n  BarChart\n};\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import React, { Component } from 'react';\nimport d3 from 'd3';\n\nexport default class BarChart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [50, 43, 120, 87, 99, 167, 142]\n    };\n  }\n\n  sortItems() {\n    this.setState({\n      data: this.state.data.sort(d3.ascending)\n    });\n  }\n\n  addItem() {\n    this.state.data.push(Math.floor(Math.random() * 100));\n    this.forceUpdate();\n  }\n\n  render() {\n    const width = 400;\n    const height = 400;\n    const padding = {\n      left: 20,\n      right: 20,\n      top: 20,\n      bottom: 20\n    };\n    const rectStep = 35;\n    const rectWidth = 30;\n    const rectData = this.state.data.map((item, index) => ({\n      fill: 'steelblue',\n      x: padding.left + index * rectStep,\n      y: height - padding.bottom - item,\n      width: rectWidth,\n      height: item\n    }));\n    const textData = this.state.data.map((item, index) => ({\n      fill: 'white',\n      fontSize: '14px',\n      textAnchor: 'middle',\n      x: padding.left + index * rectStep,\n      y: height - padding.bottom - item,\n      dx: rectWidth / 2,\n      dy: '1em',\n      value: item\n    }));\n\n    return (\n      <div>\n        <svg height={height} width={width}>\n        {\n          rectData.map((item, index) => <rect key={index} {...item} />)\n        }\n        {\n          textData.map((item, index) => <text key={index} {...item}>{item.value}</text>)\n        }\n        </svg>\n        <button onClick={this.sortItems.bind(this)}>Sort</button>\n        <button onClick={this.addItem.bind(this)}>Add</button>\n      </div>\n    );\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/BarChart.jsx\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"React\",\"root\":\"React\"}\n ** module id = 2\n ** module chunks = 0\n **/","!function() {\n  var d3 = {\n    version: \"3.5.12\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/d3.js\n ** module id = 3\n ** module chunks = 0\n **/"],"sourceRoot":""}