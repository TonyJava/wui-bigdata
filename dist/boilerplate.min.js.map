{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///boilerplate.min.js","webpack:///webpack/bootstrap bedbaa3f83e366bd1d8d","webpack:///./src/index.js","webpack:///./src/BarChart.jsx","webpack:///external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"React\",\"root\":\"React\"}","webpack:///./~/d3/d3.js","webpack:///./src/ScatterChart.jsx"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_BarChart","_BarChart2","_ScatterChart","_ScatterChart2","BarChart","ScatterChart","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_extends","assign","target","i","arguments","length","source","key","hasOwnProperty","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_react","_react2","_d","_d2","_Component","_this","getPrototypeOf","state","data","setState","sort","ascending","push","Math","floor","random","forceUpdate","select","refs","xAxis","yAxis","width","height","padding","left","right","top","bottom","xAxisWidth","yAxisWidth","xScale","scale","ordinal","domain","range","rangeRoundBands","yScale","linear","max","rectData","map","item","index","fill","x","y","rangeBand","textData","fontSize","textAnchor","dx","dy","svg","axis","orient","createElement","ref","className","transform","onClick","sortItems","bind","addItem","Component","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","d3_numeric","isNaN","d3_bisector","compare","lo","hi","mid","d3_zipLength","d","d3_range_integerScale","k","d3_class","ctor","properties","d3_Map","_","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","method","apply","d3_vendorSymbol","object","name","charAt","toUpperCase","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","get","indexOf","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","createElementNS","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","append","position","margin","border","ctm","getScreenCTM","f","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","toString","min","format","hsl","color","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","Date","now","time","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","ceil","log","LN10","d3_formatPrefix","abs","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","join","specifier","d3_format_re","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","dt","times","range_utc","utc","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","tops","bottoms","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","undefined"],"mappings":"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","file":"boilerplate.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"React\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Boilerplate\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"Boilerplate\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"React\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Boilerplate\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"Boilerplate\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _BarChart = __webpack_require__(1);\n\t\n\tvar _BarChart2 = _interopRequireDefault(_BarChart);\n\t\n\tvar _ScatterChart = __webpack_require__(4);\n\t\n\tvar _ScatterChart2 = _interopRequireDefault(_ScatterChart);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// this should be the entry point to your library\n\tmodule.exports = {\n\t  BarChart: _BarChart2.default,\n\t  ScatterChart: _ScatterChart2.default\n\t};\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _d = __webpack_require__(3);\n\t\n\tvar _d2 = _interopRequireDefault(_d);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar BarChart = function (_Component) {\n\t  _inherits(BarChart, _Component);\n\t\n\t  function BarChart() {\n\t    _classCallCheck(this, BarChart);\n\t\n\t    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(BarChart).call(this));\n\t\n\t    _this.state = {\n\t      data: [50, 43, 120, 87, 99, 167, 142]\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(BarChart, [{\n\t    key: 'sortItems',\n\t    value: function sortItems() {\n\t      this.setState({\n\t        data: this.state.data.sort(_d2.default.ascending)\n\t      });\n\t    }\n\t  }, {\n\t    key: 'addItem',\n\t    value: function addItem() {\n\t      this.state.data.push(Math.floor(Math.random() * 100));\n\t      this.forceUpdate();\n\t    }\n\t  }, {\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      _d2.default.select(this.refs.xAxis).call(this.xAxis);\n\t      _d2.default.select(this.refs.yAxis).call(this.yAxis);\n\t    }\n\t  }, {\n\t    key: 'componentDidUpdate',\n\t    value: function componentDidUpdate() {\n\t      _d2.default.select(this.refs.xAxis).call(this.xAxis);\n\t      _d2.default.select(this.refs.yAxis).call(this.yAxis);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var width = 400;\n\t      var height = 400;\n\t      var padding = {\n\t        left: 20,\n\t        right: 20,\n\t        top: 20,\n\t        bottom: 20\n\t      };\n\t      var xAxisWidth = 300;\n\t      var yAxisWidth = 300;\n\t      var xScale = _d2.default.scale.ordinal().domain(_d2.default.range(this.state.data.length)).rangeRoundBands([0, xAxisWidth], 0.2);\n\t      var yScale = _d2.default.scale.linear().domain([0, _d2.default.max(this.state.data)]).range([0, yAxisWidth]);\n\t      var rectData = this.state.data.map(function (item, index) {\n\t        return {\n\t          fill: 'steelblue',\n\t          x: padding.left + xScale(index),\n\t          y: height - padding.bottom - yScale(item),\n\t          width: xScale.rangeBand(),\n\t          height: yScale(item)\n\t        };\n\t      });\n\t      var textData = this.state.data.map(function (item, index) {\n\t        return {\n\t          fill: 'white',\n\t          fontSize: '14px',\n\t          textAnchor: 'middle',\n\t          x: padding.left + xScale(index),\n\t          y: height - padding.bottom - yScale(item),\n\t          dx: xScale.rangeBand() / 2,\n\t          dy: '1em',\n\t          value: item\n\t        };\n\t      });\n\t      this.xAxis = _d2.default.svg.axis().scale(xScale).orient('bottom');\n\t      yScale.range([yAxisWidth, 0]);\n\t      this.yAxis = _d2.default.svg.axis().scale(yScale).orient('left');\n\t\n\t      return _react2.default.createElement(\n\t        'div',\n\t        null,\n\t        _react2.default.createElement(\n\t          'svg',\n\t          { height: height, width: width },\n\t          rectData.map(function (item, index) {\n\t            return _react2.default.createElement('rect', _extends({ key: index }, item));\n\t          }),\n\t          textData.map(function (item, index) {\n\t            return _react2.default.createElement(\n\t              'text',\n\t              _extends({ key: index }, item),\n\t              item.value\n\t            );\n\t          }),\n\t          _react2.default.createElement('g', { ref: 'xAxis',\n\t            className: 'axis',\n\t            transform: 'translate(' + padding.left + ',' + (height - padding.bottom) + ')' }),\n\t          _react2.default.createElement('g', { ref: 'yAxis',\n\t            className: 'axis',\n\t            transform: 'translate(' + padding.left + ',' + (height - padding.top - yAxisWidth) + ')' })\n\t        ),\n\t        _react2.default.createElement(\n\t          'button',\n\t          { onClick: this.sortItems.bind(this) },\n\t          'Sort'\n\t        ),\n\t        _react2.default.createElement(\n\t          'button',\n\t          { onClick: this.addItem.bind(this) },\n\t          'Add'\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BarChart;\n\t}(_react.Component);\n\t\n\texports.default = BarChart;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.12\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.zip = function() {\n\t    if (!(n = arguments.length)) return [];\n\t    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n\t        zip[j] = arguments[j][i];\n\t      }\n\t    }\n\t    return zips;\n\t  };\n\t  function d3_zipLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.transpose = function(matrix) {\n\t    return d3.zip.apply(d3, matrix);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: \"http://www.w3.org/1999/xhtml\",\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (node = group[i]) {\n\t            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n\t              exitNodes[i] = node;\n\t            } else {\n\t              nodeByKeyValue.set(keyValue, node);\n\t            }\n\t            keyValues[i] = keyValue;\n\t          }\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = d3_array(nodes);\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n\t    if (d2 < ε2) {\n\t      S = Math.log(w1 / w0) / ρ;\n\t      i = function(t) {\n\t        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n\t      };\n\t    } else {\n\t      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / ρ;\n\t      i = function(t) {\n\t        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      };\n\t    }\n\t    i.duration = S * 1e3;\n\t    return i;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: null\n\t      };\n\t      scaleTo(+_);\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function() {\n\t    d3_timer.apply(this, arguments);\n\t  };\n\t  function d3_timer(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t    return timer;\n\t  }\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now(), timer = d3_timer_queueHead;\n\t    while (timer) {\n\t      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n\t      timer = timer.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.c) {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      } else {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value = +value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n\t          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransformPop(s) {\n\t    return s.length ? s.pop() + \",\" : \"\";\n\t  }\n\t  function d3_interpolateTranslate(ta, tb, s, q) {\n\t    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n\t      var i = s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateRotate(ra, rb, s, q) {\n\t    if (ra !== rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateSkew(wa, wb, s, q) {\n\t    if (wa !== wb) {\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateScale(ka, kb, s, q) {\n\t    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n\t      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] !== 1 || kb[1] !== 1) {\n\t      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [];\n\t    a = d3.transform(a), b = d3.transform(b);\n\t    d3_interpolateTranslate(a.translate, b.translate, s, q);\n\t    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n\t    d3_interpolateSkew(a.skew, b.skew, s, q);\n\t    d3_interpolateScale(a.scale, b.scale, s, q);\n\t    a = b = null;\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: groupSums[di]\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        timer = null;\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) {\n\t          alpha = x;\n\t        } else {\n\t          timer.c = null, timer.t = NaN, timer = null;\n\t          event.end({\n\t            type: \"end\",\n\t            alpha: alpha = 0\n\t          });\n\t        }\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        timer = d3_timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = root.y = 0;\n\t      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    return domain;\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(1, base * n / scale.ticks().length);\n\t      return function(d) {\n\t        var i = d / pow(Math.round(log(d)));\n\t        if (i * base < base - .5) i *= base;\n\t        return i <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var rc1 = rc, rc0 = rc;\n\t        if (da < π) {\n\t          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t        if (x1 != null) {\n\t          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return points.join(\"L\") + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, activeId, active;\n\t      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        if (--lock.count) delete lock[activeId]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id], time, timer, duration, ease, tweens;\n\t    function schedule(elapsed) {\n\t      var delay = transition.delay;\n\t      timer.t = delay + time;\n\t      if (delay <= elapsed) return start(elapsed - delay);\n\t      timer.c = start;\n\t    }\n\t    function start(elapsed) {\n\t      var activeId = lock.active, active = lock[activeId];\n\t      if (active) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        --lock.count;\n\t        delete lock[activeId];\n\t        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t      }\n\t      for (var cancelId in lock) {\n\t        if (+cancelId < id) {\n\t          var cancel = lock[cancelId];\n\t          cancel.timer.c = null;\n\t          cancel.timer.t = NaN;\n\t          --lock.count;\n\t          delete lock[cancelId];\n\t        }\n\t      }\n\t      timer.c = tick;\n\t      d3_timer(function() {\n\t        if (timer.c && tick(elapsed || 1)) {\n\t          timer.c = null;\n\t          timer.t = NaN;\n\t        }\n\t        return 1;\n\t      }, 0, time);\n\t      lock.active = id;\n\t      transition.event && transition.event.start.call(node, node.__data__, i);\n\t      tweens = [];\n\t      transition.tween.forEach(function(key, value) {\n\t        if (value = value.call(node, node.__data__, i)) {\n\t          tweens.push(value);\n\t        }\n\t      });\n\t      ease = transition.ease;\n\t      duration = transition.duration;\n\t    }\n\t    function tick(elapsed) {\n\t      var t = elapsed / duration, e = ease(t), n = tweens.length;\n\t      while (n > 0) {\n\t        tweens[--n].call(node, e);\n\t      }\n\t      if (t >= 1) {\n\t        transition.event && transition.event.end.call(node, node.__data__, i);\n\t        if (--lock.count) delete lock[id]; else delete node[ns];\n\t        return 1;\n\t      }\n\t    }\n\t    if (!transition) {\n\t      time = inherit.time;\n\t      timer = d3_timer(schedule, 0, time);\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        timer: timer,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = d3_array(arguments);\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n\t}();\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _d = __webpack_require__(3);\n\t\n\tvar _d2 = _interopRequireDefault(_d);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar ScatterChart = function (_Component) {\n\t  _inherits(ScatterChart, _Component);\n\t\n\t  function ScatterChart() {\n\t    _classCallCheck(this, ScatterChart);\n\t\n\t    return _possibleConstructorReturn(this, Object.getPrototypeOf(ScatterChart).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(ScatterChart, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      _d2.default.select(this.refs.xAxis).call(this.xAxis);\n\t      _d2.default.select(this.refs.yAxis).call(this.yAxis);\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var width = 400;\n\t      var height = 400;\n\t      var xAxisWidth = 300;\n\t      var yAxisWidth = 300;\n\t      var padding = {\n\t        top: 30,\n\t        right: 30,\n\t        bottom: 30,\n\t        left: 30\n\t      };\n\t\n\t      var center = [[0.5, 0.5], [0.7, 0.8], [0.4, 0.9], [0.11, 0.32], [0.88, 0.25], [0.75, 0.12], [0.5, 0.1], [0.2, 0.3], [0.4, 0.1], [0.6, 0.7]];\n\t      var xScale = _d2.default.scale.linear().domain([0, 1.2 * _d2.default.max(center, function (d) {\n\t        return d[0];\n\t      })]).range([0, xAxisWidth]);\n\t      var yScale = _d2.default.scale.linear().domain([0, 1.2 * _d2.default.max(center, function (d) {\n\t        return d[1];\n\t      })]).range([0, yAxisWidth]);\n\t      var data = center.map(function (circle) {\n\t        return {\n\t          fill: 'black',\n\t          cx: padding.left + xScale(circle[0]),\n\t          cy: height - padding.bottom - yScale(circle[1]),\n\t          r: 5\n\t        };\n\t      });\n\t\n\t      this.xAxis = _d2.default.svg.axis().scale(xScale).orient('bottom');\n\t      yScale.range([yAxisWidth, 0]);\n\t      this.yAxis = _d2.default.svg.axis().scale(yScale).orient('left');\n\t\n\t      return _react2.default.createElement(\n\t        'svg',\n\t        { width: width, height: height },\n\t        data.map(function (circle, index) {\n\t          return _react2.default.createElement('circle', _extends({ key: index }, circle));\n\t        }),\n\t        _react2.default.createElement('g', { ref: 'xAxis',\n\t          className: 'axis',\n\t          transform: 'translate(' + padding.left + ',' + (height - padding.bottom) + ')' }),\n\t        _react2.default.createElement('g', { ref: 'yAxis',\n\t          className: 'axis',\n\t          transform: 'translate(' + padding.left + ',' + (height - padding.top - yAxisWidth) + ')' })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return ScatterChart;\n\t}(_react.Component);\n\t\n\texports.default = ScatterChart;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** boilerplate.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap bedbaa3f83e366bd1d8d\n **/","'use strict';\n\nimport BarChart from './BarChart.jsx';\nimport ScatterChart from './ScatterChart.jsx';\n\n// this should be the entry point to your library\nmodule.exports = {\n  BarChart,\n  ScatterChart\n};\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import React, { Component } from 'react';\nimport d3 from 'd3';\n\nexport default class BarChart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [50, 43, 120, 87, 99, 167, 142]\n    };\n  }\n\n  sortItems() {\n    this.setState({\n      data: this.state.data.sort(d3.ascending)\n    });\n  }\n\n  addItem() {\n    this.state.data.push(Math.floor(Math.random() * 100));\n    this.forceUpdate();\n  }\n\n  componentDidMount() {\n    d3.select(this.refs.xAxis).call(this.xAxis);\n    d3.select(this.refs.yAxis).call(this.yAxis);\n  }\n\n  componentDidUpdate() {\n    d3.select(this.refs.xAxis).call(this.xAxis);\n    d3.select(this.refs.yAxis).call(this.yAxis);\n  }\n\n  render() {\n    const width = 400;\n    const height = 400;\n    const padding = {\n      left: 20,\n      right: 20,\n      top: 20,\n      bottom: 20\n    };\n    const xAxisWidth = 300;\n    const yAxisWidth = 300;\n    const xScale = d3.scale.ordinal()\n                     .domain(d3.range(this.state.data.length))\n                     .rangeRoundBands([0, xAxisWidth], 0.2);\n    const yScale = d3.scale.linear()\n                     .domain([0, d3.max(this.state.data)])\n                     .range([0, yAxisWidth]);\n    const rectData = this.state.data.map((item, index) => ({\n      fill: 'steelblue',\n      x: padding.left + xScale(index),\n      y: height - padding.bottom - yScale(item),\n      width: xScale.rangeBand(),\n      height: yScale(item)\n    }));\n    const textData = this.state.data.map((item, index) => ({\n      fill: 'white',\n      fontSize: '14px',\n      textAnchor: 'middle',\n      x: padding.left + xScale(index),\n      y: height - padding.bottom - yScale(item),\n      dx: xScale.rangeBand() / 2,\n      dy: '1em',\n      value: item\n    }));\n    this.xAxis = d3.svg.axis()\n                   .scale(xScale)\n                   .orient('bottom');\n    yScale.range([yAxisWidth, 0]);\n    this.yAxis = d3.svg.axis()\n                   .scale(yScale)\n                   .orient('left');\n\n    return (\n      <div>\n        <svg height={height} width={width}>\n        {\n          rectData.map((item, index) => <rect key={index} {...item} />)\n        }\n        {\n          textData.map((item, index) => <text key={index} {...item}>{item.value}</text>)\n        }\n          <g ref=\"xAxis\"\n             className=\"axis\"\n             transform={`translate(${padding.left},${height - padding.bottom})`}>\n          </g>\n          <g ref=\"yAxis\"\n             className=\"axis\"\n             transform={`translate(${padding.left},${height - padding.top - yAxisWidth})`}>\n          </g>\n        </svg>\n        <button onClick={this.sortItems.bind(this)}>Sort</button>\n        <button onClick={this.addItem.bind(this)}>Add</button>\n      </div>\n    );\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/BarChart.jsx\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"React\",\"root\":\"React\"}\n ** module id = 2\n ** module chunks = 0\n **/","!function() {\n  var d3 = {\n    version: \"3.5.12\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/d3.js\n ** module id = 3\n ** module chunks = 0\n **/","import React, { Component } from 'react';\nimport d3 from 'd3';\n\nexport default class ScatterChart extends Component {\n  componentDidMount() {\n    d3.select(this.refs.xAxis).call(this.xAxis);\n    d3.select(this.refs.yAxis).call(this.yAxis);\n  }\n\n  render() {\n    const width = 400;\n    const height = 400;\n    const xAxisWidth = 300;\n    const yAxisWidth = 300;\n    const padding = {\n      top: 30,\n      right: 30,\n      bottom: 30,\n      left: 30\n    };\n\n    const center =\n      [[0.5, 0.5], [0.7, 0.8], [0.4, 0.9],\n       [0.11, 0.32], [0.88, 0.25], [0.75, 0.12],\n       [0.5, 0.1], [0.2, 0.3], [0.4, 0.1], [0.6, 0.7]];\n    const xScale = d3.scale.linear()\n                     .domain([0, 1.2 * d3.max(center, d => d[0])])\n                     .range([0, xAxisWidth]);\n    const yScale = d3.scale.linear()\n                     .domain([0, 1.2 * d3.max(center, d => d[1])])\n                     .range([0, yAxisWidth]);\n    const data = center.map(circle => ({\n      fill: 'black',\n      cx: padding.left + xScale(circle[0]),\n      cy: height - padding.bottom - yScale(circle[1]),\n      r: 5\n    }));\n\n    this.xAxis = d3.svg.axis()\n               .scale(xScale)\n               .orient('bottom');\n    yScale.range([yAxisWidth, 0]);\n    this.yAxis = d3.svg.axis()\n                   .scale(yScale)\n                   .orient('left');\n\n    return (\n      <svg width={width} height={height}>\n      {\n        data.map((circle, index) => (\n          <circle key={index} {...circle} />\n        ))\n      }\n        <g ref=\"xAxis\"\n           className=\"axis\"\n           transform={`translate(${padding.left},${height - padding.bottom})`}>\n        </g>\n        <g ref=\"yAxis\"\n           className=\"axis\"\n           transform={`translate(${padding.left},${height - padding.top - yAxisWidth})`}>\n        </g>\n      </svg>\n    );\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ScatterChart.jsx\n **/"],"sourceRoot":""}